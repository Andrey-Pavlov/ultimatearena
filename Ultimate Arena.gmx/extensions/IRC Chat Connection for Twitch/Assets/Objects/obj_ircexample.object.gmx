<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>irc_create_socket("irc.twitch.tv",6667,"chatbot123","oauth:j6f1c65a4sr9t4b3d5g1d14","xXCoolStreamerXx",true)

alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Example:
//Call irc_get_viewers() and irc_refresh_followers() every 30 seconds which will trigger the HTTP event

alarm[0] = room_speed * 5

irc_get_viewers()
irc_refresh_followers()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if irc_handle_networking() = "message"
{
    //Add commands here:
    //Variables you can always access:
    //
    //"msg" : Contains the message the user sent
    //"sender" : Stores the username of the user
    //
    //If you enabled IRCv3 in irc_create_socket you have access to the following variables:
    //
    //"color" : Stores the chat color of the sender in this format: "#FFFFFF" - if the user hasnt set their color yet, the color value will default to #000000
    //"subscriber" : Is 1 or 0 depending on whether the sender of the message subscribed to the channel
    //"turbo" : Is 1 or 0 depending on whether the sender has bought Twitch-Turbo
    
    //No arguments:
    if msg = "!ping"
    {
        irc_send_message("pong!")
    }
    
    if ircv3
    {
        if msg = "!info"
        {
            irc_send_message("Sender: " + sender + " Color: " + color + " Subscriber: " + subscriber + " Turbo: " + turbo)
        }
    }
    
    //1 Argument::
    //Make sure you add a space after the command in string_pos.
    //Prevents: "!killabcd PLAYER1" to cause "!kill PLAYER1"
    
    if string_pos("!kill ",msg) = 1 //change command here
    {
    
        //These 2 lines extract the argument out of the message
        
        arg1 = string_delete(msg,1,string_length("!kill ")) //change command here
        arg1 = string_delete(arg1,string_pos(" ",arg1),string_length(arg1)-1)
        
        if arg1 != ""
        {
            irc_send_message(arg1 + " was killed by " + sender)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Handles the irc_get_viewers() and the irc_refresh_followers() request
//
//"viewercount" : Count of viewers
//"mods" : ds_list of moderators
//"viewers" : ds_list of normal viewers (does not include mods)
//
//"followercount" : Count of followers
//"followers" : ds_list of last 25 followers

irc_handle_http()

//Example: Print the viewercount and the mods, viewers list

show_debug_message("Viewer count: " + string(viewercount))

if ds_exists(mods,ds_type_list)
{
    show_debug_message("Mods:")
    //Iterate through the mods list
    for(i = 0; i &lt; ds_list_size(mods); i++)
    {
        show_debug_message(mods[| i])
    }
}

if ds_exists(viewers,ds_type_list)
{
    show_debug_message("Viewers:")
    //Iterate through the viewers list
    for(i = 0; i &lt; ds_list_size(viewers); i++)
    {
        show_debug_message(viewers[| i])
    }
}


//Example: Print the followercount and the last 25 followers

show_debug_message("Follower count: " + string(followercount))

if ds_exists(followers,ds_type_list)
{
    show_debug_message("Last 25 followers:")
    //Iterate through the followers list
    for(i = 0; i &lt; ds_list_size(followers); i++)
    {
        show_debug_message(followers[| i])
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
